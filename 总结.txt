--------tricks--------
//0 <= x <= n, 调整x的位置（排序）方法：
int i = 0;
while(i < nums.size()){
	if(nums[i] != nums[nums[i]])
		swap(nums[i], nums[nums[i]])
	else
		i++;
}
----------------------
//binary search
void bisearch(vector<int> &nums, int l, int r, int target){
	while(l <= r){
		int mid = l+(r-l)/2;
		if (nums[mid] == target)
			return mid;
		else if(nums[mid] < target)
			l = mid+1;
		else 
			r = mid-1;
	}
	return -1;
}

//find the min val in rotated array
int findMin(vector<int> & nums){
	int l = 0, r = nums.size()-1;
	while(l < r){
		if (l+1==r) break;
		int mid = l + (r-l)/2;
		if(nums[mid] < nums[l])
			l = mid;
		else
			r = mid;

	}
	return min(nums[l], nums[r]);
}
------------------------
			
	
		
